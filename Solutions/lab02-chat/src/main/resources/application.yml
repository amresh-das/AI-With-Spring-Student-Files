spring:
  application.name: Lab02 Chat
  main.web-application-type: none     # Do not start a web server.

  ai:
    retry:
      max-attempts: 1           # Maximum number of retry attempts.
    bedrock.anthropic.chat.enabled: false # Disable all models by default.
    ollama.chat.enabled: false        # Disable all models by default.
    openai.chat.enabled: false        # Disable all models by default.
    azure.openai.chat.enabled: false  # Disable all models by default.


---
spring:
  config.activate.on-profile: ollama

  # TODO-04: Set the spring.application.name to "Lab02 Chat Ollama" or something similar.
  # Set the spring.main.web-application-type to none to avoid starting a web server.
  # Set the spring.ai.retry.max-attempts to 1 to limit the number of retry attempts.
  # Set the spring.ai.ollama.base-url to http://localhost:11434, unless your container is running on a different URL.

  application.name: Lab02 Chat Ollama
  ai:
    ollama:
      base-url: http://localhost:11434  # Default base URL when you run Ollama from Docker
      chat:
        enabled: true
        options:
          model: mistral
---
spring:
  config.activate.on-profile: aws

  # TODO-04: Set the spring.application.name to "Lab02 Chat AWS" or something similar.
  # Set the spring.main.web-application-type to none to avoid starting a web server.
  # Set the spring.ai.retry.max-attempts to 1 to limit the number of retry attempts.
  # Set the spring.ai.bedrock.aws.region to "us-west-2", or whichever region you have enabled the titan model in.
  # Set the spring.ai.bedrock.titan.chat.enabled to specify use of the Titan chat model.
  
  application.name: Lab02 Chat AWS
  ai:
    bedrock:
      aws.region: us-west-2
      titan:
        chat:
          enabled: true

---
spring:
  config.activate.on-profile: openai

  # TODO-04: Set the spring.application.name to "Lab02 Chat OpenAI" or something similar.
  # Set the spring.main.web-application-type to none to avoid starting a web server.
  # Set the spring.ai.retry.max-attempts to 1 to limit the number of retry attempts.
  # Set the spring.ai.openai.enabled property to true to enable this chatModel.
  application.name: Lab02 Chat OpenAI
  ai:
    openai:
      api-key: NEVER-PLACE-SECRET-KEY-IN-CONFIG-FILE
      chat.enabled: true

---
spring:
  config.activate.on-profile: azure

  # TODO-04: Set the spring.application.name to "Lab02 Chat Azure" or something similar.
  # Set the spring.main.web-application-type to none to avoid starting a web server.
  # Set the spring.ai.retry.max-attempts to 1 to limit the number of retry attempts.
  # Set the spring.ai.azure.openai.chat.enabled to true to enable the chatModel.
  # Set the spring.ai.azure.openai.endpoint to the value you established during Azure setup.
  # Set the spring.ai.azure.openai.chat.options.deployment-name to the value you establised during setup (probably "gpt-35-turbo").
  # Set the spring.ai.azure.openai.chat.options.model to the value you established during setup (probably "gpt-35-turbo").

  application.name: Lab02 Chat Azure
  ai:
    azure:
      openai:
        api_key: NEVER-PLACE-SECRET-KEY-IN-CONFIG-FILE
        endpoint: ENDPOINT-GOES-HERE
        chat:
          enabled: true
          options:
            deployment-name: DEPLOYMENT-NAME-GOES-HERE
            model: gpt-35-turbo

